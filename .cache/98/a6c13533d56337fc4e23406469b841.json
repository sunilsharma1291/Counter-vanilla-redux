{"id":"index.html","dependencies":[{"name":"/Users/sunil.sharma/Work/new_start/Counter-vanilla-redux/package.json","includedInParent":true,"mtime":1572500232128}],"generated":{"html":"<!Doctype html>\n<html>\n    <head></head>\n    <title>Redux basic example</title>\n    <script src=\"https://unpkg.com/redux@latest/dist/redux.min.js\"></script>\n    <body>\n        <div>\n            <p>\n              Clicked: <span id=\"valueItem\">0</span> times\n            </p>\n            <button id=\"increment\">+</button>\n            <button id=\"decrement\">-</button>\n            <button id=\"incrementIfOdd\">Increment if odd</button>\n            <button id=\"incrementAsync\">Increment async</button>\n          </div>\n\n          <script>// Define Actions\nvar INCREMENT = {\n  type: 'INCREMENT'\n};\nvar DECREMENT = {\n  type: 'DECREMENT'\n}; // Define Action Creators\n\nfunction runActionCreators(action) {\n  store.dispatch(action);\n} // Set Reducer to update the state\n\n\nfunction CounterReducer(state, action) {\n  if (typeof state == 'undefined') {\n    return 0;\n  }\n\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1;\n\n    case 'DECREMENT':\n      return state - 1;\n\n    default:\n      return state;\n  }\n} // Create store from the reducer\n\n\nvar store = Redux.createStore(CounterReducer); // Subscribe to state changes and present it, can be the slot for presentation logic\n\nvar element = document.getElementById('valueItem');\n\nfunction render() {\n  element.innerHTML = store.getState().toString();\n}\n\nrender();\nstore.subscribe(render); // Define event listeners to initate actions on callbacks, to be done from props in react implementations\n\ndocument.getElementById('increment').addEventListener('click', function () {\n  runActionCreators(INCREMENT);\n});\ndocument.getElementById('decrement').addEventListener('click', function () {\n  runActionCreators(DECREMENT);\n});\ndocument.getElementById('incrementIfOdd').addEventListener('click', function () {\n  if (store.getState() % 2 !== 0) {\n    runActionCreators(INCREMENT);\n  }\n});\ndocument.getElementById('incrementAsync').addEventListener('click', function () {\n  setTimeout(function () {\n    runActionCreators(INCREMENT);\n  }, 1000);\n});</script>\n    </body>\n</html>"},"sourceMaps":null,"error":null,"hash":"36e126dc3e2758858e9e297aac7a954d","cacheData":{"env":{}}}